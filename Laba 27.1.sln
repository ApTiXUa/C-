#include <iostream>

using namespace std;
int main()
{
 	int i,j,n,a[30][30],*p[30],**dp;
 	cout<<"Input n: "; //вводимо розмірність матриці n (тобто n x n).
 	cin>>n;
 	dp=p; //dp = p; — тепер dp вказує на масив вказівників p.
	for(i=0;i<n;i++) //Кожен p[i] отримує адресу початку відповідного рядка a[i]. Тобто p[i] = a[i]; робить p еквівалентом двовимірного масиву a.
	{
 		p[i]=a[i]; //Отже, *(*(dp + i) + j) — це доступ до a[i][j] через подвійний вказівник.
	}
	
 	for(i=0;i<n;i++) //зчитуються всі n*n елементів у матрицю через dp.
	 {
  	cout<<endl;
 		for(j=0;j<n;j++)
		 {
 			cin>>*(*(dp+i)+j);
		}
	}
 	for(i=0;i<n;i++)
	 {
 		for(j=0;j<n;j++) //виводиться матриця у вигляді таблиці.
 			cout<<*(*(dp+i)+j)<<" ";
 	cout<<endl;
	}
	int max = a[0][0]; // Початкове значення — перший елемент головної діагоналі
	int min = a[0][n-1]; // Початкове значення — перший елемент побічної діагоналі
	for(i=0;i<n;i++)
	{
 		for(j=0;j<n;j++) //Якщо i == j — це головна діагональ, оновлюємо max, якщо елемент більший.
		 {
 			if(i==j&&*(*(dp+i)+j)>max) //Якщо i + j + 1 == n — це побічна діагональ, оновлюємо min, якщо менший.
			 {
 				max = *(*(dp+i)+j);
			}
			else if(i+j+1==n&&*(*(dp+i)+j)<min){
				min = *(*(dp+i)+j);
			}
		}
	}
	
	cout<<endl<<"Max - "<<max<<" Min - "<<min<<" Difference:"<<max-min;
}
